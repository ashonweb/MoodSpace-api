const mongoose = require('mongoose');




// Schema for individual location items within locationAndDirection
const locationItemSchema = new mongoose.Schema({
  address: String,
  gettingThere: String,
  parking: String,
  category: String,
  searchTerm: String,
  coordinates: {
    lat: Number,
    lng: Number
  }
}, { _id: false });




// Main LocationAndDirection schema
const LocationAndDirectionSchema = new mongoose.Schema({
  moodId: {
    type: String,
    required: true,
    trim: true,
    index: true
  },
  title: {
    type: String,
    required: true,
    trim: true,
    maxlength: 200
  },
  state: {
    type: String,
    required: true,
    trim: true,
    maxlength: 100,
    index: true
  },
  location: {
    type: String,
    required: true,
    trim: true,
    maxlength: 100
  },
  locationAndDirection: {
    type: [locationItemSchema],
    required: true,
    validate: [
      {
        validator: function(arr) {
          return arr.length > 0;
        },
        message: 'At least one location must be provided'
      },
      {
        validator: function(arr) {
          return arr.length <= 10;
        },
        message: 'Maximum 10 locations allowed'
      }
    ]
  },
  searchQuery: {
    type: String,
    required: false,
    trim: true,
    maxlength: 200
  },
  metadata: {
    apiCallsMade: {
      type: Number,
      default: 1,
      min: 0
    },
    lastApiCall: {
      type: Date,
      default: Date.now
    },
    usageCount: {
      type: Number,
      default: 1,
      min: 0
    }
  }
}, {
  timestamps: true, // Adds createdAt and updatedAt
  collection: 'locationAndDirection'
});

module.exports = mongoose.model('locationAndDirection', LocationAndDirectionSchema, 'locationAndDirection');